SELECT
FROM PAYMENT_HISTORY
WHERE ORDER_DATE >= '20200101' AND
    ORDER_DATE < '20200201'

-- DATE 형간의 비교는 그냥 '20200101' 과 같이 VARCHAR 쓰셔도 비교가 가능하긴 하지만
-- 옳은 방법은 아닙니다.
-- 따라서 TO_DATE 함수를 사용하여 비교하는것이 옳습니다

SELECT
FROM PAYMENT_HISTORY
WHERE ORDER_DATE >= TO_DATE('20200101') AND
    ORDER_DATE < TO_DATE('20200201')

SELECT
    SUM(ORDER_PRICE)
FROM 
    PAYMENT_HISTORY
WHERE  
    ORDER_DATE >= TO_DATE('20200101') AND  
    ORDER_DATE < TO_DATE('20200201')

-- 월별 매출을 뽑기 위해서는 날짜 데이터를 MONTH 까지 잘라서
-- 자른 데이터를 기준으로 그룹 바이 구문을 사용하면 MONTH 기준으로 뽑을수 있습니다
-- TO_CHAR(바꿀날짜컬럼, 포멧 문자열)
-- YYYY - 4자리 년도
-- MM - 2자리 월
-- DD - 2자리 일
-- HH24 - 24시간 시간
-- MI - 분
-- SS - 초

SELECT TO_CHAR(ORDER_DATE, 'YYYYMM') AS MONTH, SUM(ORDER_PRICE)
FROM PAYMENT_HISTORY
GROUP BY TO_CHAR(ORDER_DATE, 'YYYYMM')

SELECT 
    TO_CHAR(ORDER_DATE, 'YYYYMMDD') AS MONTH, SUM(ORDER_PRICE)
FROM 
    PAYMENT_HISTORY
WHERE 
    ORDER_DATE >= TO_DATE('20200101') AND  
    ORDER_DATE < TO_DATE('20200201')
GROUP BY 
    TO_CHAR(ORDER_DATE, 'YYYYMMDD')

SELECT 
    TO_CHAR(ORDER_DATE, 'YYYYMM') AS MONTH, SUM(ORDER_PRICE), COUNT(ORDER_COUNT)
FROM 
    PAYMENT_HISTORY
WHERE
    ORDER_DATE >= TO_DATE('20200101') AND  
    ORDER_DATE < TO_DATE('20200401')
GROUP BY 
    TO_CHAR(ORDER_DATE, 'YYYYMM')

SELECT 
    TO_CHAR(ORDER_DATE, 'YYYYMM') AS MONTH,MAX(ORDER_PRICE) AS MAXPRICE
FROM 
    PAYMENT_HISTORY
GROUP BY 
    TO_CHAR(ORDER_DATE, 'YYYYMM')
ORDER BY MONTH ASC

SELECT 
    TO_CHAR(ORDER_DATE, 'YYYYMM') AS MONTH,MAX(ORDER_PRICE) AS MAXPRICE
FROM 
    PAYMENT_HISTORY
GROUP BY 
    TO_CHAR(ORDER_DATE, 'YYYYMM')
ORDER BY MONTH ASC

SELECT
    PRODUCT.NAME,
    SUM(PAYMENT_HISTORY.ORDER_COUNT)
FROM
    payment_history,
    product
WHERE
    payment_history.product_id = product.id
GROUP BY
    product_id,
    PRODUCT.NAME
ORDER BY
     SUM(order_count) DESC

SELECT
    PRODUCT.NAME,
    SUM(PAYMENT_HISTORY.ORDER_PRICE)
FROM
    payment_history,
    product
WHERE
    payment_history.product_id = product.id
GROUP BY
    product_id,
    PRODUCT.NAME
ORDER BY
    SUM(order_price) DESC

SELECT
    CATEGORY.NAME,
    SUM(PRODUCT.PRICE)
FROM
    CATEGORY, PRODUCT
WHERE
    CATEGORY.ID = product.category_id
GROUP BY
    PRODUCT.ID
ORDER BY
    SUM(PRODUCT.PRICE)

SELECT
    (ORDER_PRICE / ORDER_COUNT) AS 평균단가,
    PAYMENT_HISTORY.*
FROM
    PAYMENT_HISTORY
WHERE
    (ORDER_PRICE / ORDER_COUNT) <= 100000

SELECT 
    SUM(ORDER_PRICE),
    PAYMENT_HISTORY.ADDRESS
FROM
    PAYMENT_HISTORY
GROUP BY
    PAYMENT_HISTORY.ADDRESS

    